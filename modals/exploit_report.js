const { ChannelType, PermissionFlagsBits, ButtonBuilder, ButtonStyle, ActionRowBuilder } = require("discord.js")


module.exports = async (interaction) => {
    if (interaction.fields.getTextInputValue("reason") === "") {
        interaction.reply("Please put in a valid reason.")
    }
    if (!Number(interaction.fields.getTextInputValue("user_id"))) {
        return interaction.reply({
            content: "Please put in a valid user ID.",
            ephemeral: true
        })
    }
    interaction.guild.channels.create({
        name: "ticket-" + interaction.fields.getTextInputValue("user_id"),
        type: ChannelType.GuildText,
        permissionOverwrites: [
            {
                id: interaction.guild.id,
                deny: [PermissionFlagsBits.ViewChannel]
            },
            {
                id: interaction.member.id,
                allow: [PermissionFlagsBits.ViewChannel]
            },
            {
                id: interaction.client.user.id,
                allow: [PermissionFlagsBits.ViewChannel]
            }
        ]
    }).then((channel) => {
        interaction.reply({
            content: "Ticket has been created. <#" + channel.id + ">.",
            ephemeral: true
        })
        const button_ban = new ButtonBuilder()
            .setLabel("Confirm Ban")
            .setStyle(ButtonStyle.Primary)
            .setCustomId("confirm_ban")
        const close_ticket = new ButtonBuilder()
            .setLabel("Close ticket")
            .setStyle(ButtonStyle.Danger)
            .setCustomId("close_ticket")
        const row = new ActionRowBuilder().addComponents(button_ban, close_ticket)
        const message = `<@${interaction.member.id}> created an exploit report ticket with the reason of **${interaction.fields.getTextInputValue("reason")}**.\nExploiter's profile: https://www.roblox.com/users/${interaction.fields.getTextInputValue("user_id")}/profile. \n# Now, please provide evidence of the exploiter exploiting. We don't accept PNGS.`
        channel.send({
            content: message,
            components: [row]
        })
    })
}